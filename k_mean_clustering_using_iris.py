# -*- coding: utf-8 -*-
"""k-mean clustering using iris

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vdVN805vfbUF7UNQ3MebYTvO0hGlSZ6e
"""

from sklearn.cluster import KMeans
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from matplotlib import pyplot as plt

df = pd.read_csv("/content/drive/MyDrive/iris dataset/Iris.csv")
df.head()

plt.scatter(df.PetalLengthCm,df.PetalWidthCm)
plt.xlabel('PetalLengthCm')
plt.ylabel('PetalWidthCm')

"""**ELBOW METHOD**"""

sse = []
k_rng = range(1,10)
for k in k_rng:
    km = KMeans(n_clusters=k)
    km.fit(df[['PetalLengthCm','PetalWidthCm']])
    sse.append(km.inertia_)

plt.xlabel('K')
plt.ylabel('Sum of squared error')
plt.plot(k_rng,sse)

km = KMeans(n_clusters=3)
y_predicted = km.fit_predict(df[['PetalLengthCm','PetalWidthCm']])
y_predicted

df['cluster']=y_predicted
df.head()

km.cluster_centers_

df1 = df[df.cluster==0]
df2 = df[df.cluster==1]
df3 = df[df.cluster==2]
plt.scatter(df1.PetalLengthCm,df1['PetalWidthCm'],color='green')
plt.scatter(df2.PetalLengthCm,df2['PetalWidthCm'],color='red')
plt.scatter(df3.PetalLengthCm,df3['PetalWidthCm'],color='black')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color='purple',marker='*',label='centroid')
plt.xlabel('PetalLengthCm')
plt.ylabel('PetalWidthCm')
plt.legend()